<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>leetcode on ZMY&#39;s Blog</title>
    <link>https://blog.zhangmengyang.tk/zh/tags/leetcode/</link>
    <description>Recent content in leetcode on ZMY&#39;s Blog</description>
    <image>
      <url>https://blog.zhangmengyang.tk/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://blog.zhangmengyang.tk/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 25 Sep 2022 22:16:07 +0800</lastBuildDate><atom:link href="https://blog.zhangmengyang.tk/zh/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode 3</title>
      <link>https://blog.zhangmengyang.tk/zh/leetcodes/leetcode-3/</link>
      <pubDate>Sun, 25 Sep 2022 22:16:07 +0800</pubDate>
      
      <guid>https://blog.zhangmengyang.tk/zh/leetcodes/leetcode-3/</guid>
      <description>思路 利用滑动窗口的思想，如果窗口内相同元素超过1个，那么就开始收缩直到相同元素被移出，此时窗口内必定没有重复元素，记录一下此时的窗口大小，找出窗口最大时的长度就可以了
我的代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 class Solution { public int lengthOfLongestSubstring(String s) { Map&amp;lt;Character, Integer&amp;gt; window = new HashMap&amp;lt;&amp;gt;(); int left = 0, right = 0, ans = 0; while (right &amp;lt; s.length()) { char c = s.charAt(right); right++; window.put(c, window.getOrDefault(c, 0) + 1); while (window.get(c) &amp;gt; 1) { char d = s.</description>
    </item>
    
  </channel>
</rss>
